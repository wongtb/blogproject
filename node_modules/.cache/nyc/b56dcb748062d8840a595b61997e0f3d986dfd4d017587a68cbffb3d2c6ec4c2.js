var cov_2dbjw94sxk=function(){var path="/home/brian/git/blogproject/index.js";var hash="5f1032256209476e5ec96f6ac981cf8826e5a72f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/brian/git/blogproject/index.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:34}},"1":{start:{line:3,column:19},end:{line:3,column:41}},"2":{start:{line:4,column:15},end:{line:4,column:41}},"3":{start:{line:5,column:18},end:{line:5,column:41}},"4":{start:{line:6,column:19},end:{line:6,column:51}},"5":{start:{line:9,column:10},end:{line:9,column:19}},"6":{start:{line:12,column:0},end:{line:12,column:49}},"7":{start:{line:13,column:0},end:{line:13,column:27}},"8":{start:{line:16,column:9},end:{line:16,column:30}},"9":{start:{line:17,column:0},end:{line:17,column:19}},"10":{start:{line:20,column:0},end:{line:20,column:59}},"11":{start:{line:20,column:27},end:{line:20,column:57}},"12":{start:{line:23,column:0},end:{line:23,column:26}},"13":{start:{line:24,column:0},end:{line:24,column:32}},"14":{start:{line:27,column:0},end:{line:27,column:136}},"15":{start:{line:27,column:67},end:{line:27,column:133}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:13},end:{line:20,column:14}},loc:{start:{line:20,column:27},end:{line:20,column:57}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:27,column:53},end:{line:27,column:54}},loc:{start:{line:27,column:65},end:{line:27,column:134}},line:27}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"5f1032256209476e5ec96f6ac981cf8826e5a72f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();// Import all required packages
const express=(cov_2dbjw94sxk.s[0]++,require('express'));const bodyParser=(cov_2dbjw94sxk.s[1]++,require('body-parser'));const dotenv=(cov_2dbjw94sxk.s[2]++,require('dotenv').config());const apiRoutes=(cov_2dbjw94sxk.s[3]++,require("./api-routes"));const userRoutes=(cov_2dbjw94sxk.s[4]++,require("./user/UserController"));// Initialize the app
let app=(cov_2dbjw94sxk.s[5]++,express());// Configure bodyparser to handle post requests
cov_2dbjw94sxk.s[6]++;app.use(bodyParser.urlencoded({extended:true}));cov_2dbjw94sxk.s[7]++;app.use(bodyParser.json());// Setup connection to the database
var db=(cov_2dbjw94sxk.s[8]++,require('./database'));cov_2dbjw94sxk.s[9]++;db.clearDatabase();// Send message for default URL
cov_2dbjw94sxk.s[10]++;app.get('/',(req,res)=>{cov_2dbjw94sxk.f[0]++;cov_2dbjw94sxk.s[11]++;return res.send('Blog Server is up.');});// Use Api routes in the App
cov_2dbjw94sxk.s[12]++;app.use('/api',apiRoutes);cov_2dbjw94sxk.s[13]++;app.use('/api/user',userRoutes);// Launch app to listen to specified port
cov_2dbjw94sxk.s[14]++;module.exports=app.listen(process.env.SERVER_PORT,function(){cov_2dbjw94sxk.f[1]++;cov_2dbjw94sxk.s[15]++;console.log("Running RestHub on port "+process.env.SERVER_PORT);});